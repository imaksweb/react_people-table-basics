{"version":3,"sources":["components/HomePage/HomePage.tsx","components/Navbar/Navbar.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Loader/Loader.tsx","components/PeoplePage/PeopleTable/PeopleItem/PersonLink/PersonLink.tsx","components/PeoplePage/PeopleTable/PeopleItem/PeopleItem.tsx","components/PeoplePage/PeopleTable/PeopleTable.tsx","api.ts","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","Navbar","role","isActive","cn","to","NotFoundPage","Loader","PersonLink","person","slug","sex","name","PeopleItem","people","useParams","findParent","parentName","parent","find","findPerson","born","died","motherName","fatherName","PeopleTable","map","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","setPeople","peopleIsLoaded","setPeopleIsLoaded","isError","setIsError","getPeopleFromServer","peopleFromServer","useEffect","length","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.2b16b566.chunk.js","sourcesContent":["export const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <NavLink\n          className={({ isActive }) => (cn('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          }))}\n          to=\"/\"\n        >\n          Home\n        </NavLink>\n\n        <NavLink\n          className={({ isActive }) => (cn('navbar-item', {\n            'has-background-grey-lighter': isActive,\n          }))}\n          to=\"people\"\n        >\n          People\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n","export const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../../../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <NavLink\n    to={`/people/${person.slug}`}\n    className={cn({ 'has-text-danger': person.sex === 'f' })}\n  >\n    {person.name}\n  </NavLink>\n);\n","import cn from 'classnames';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { Person } from '../../../../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n  people: Person[];\n};\n\nexport const PeopleItem: React.FC<Props> = ({ person, people }) => {\n  const { slug } = useParams();\n\n  const findParent = (parentName: string | null) => {\n    if (!parentName) {\n      return '-';\n    }\n\n    const parent = people.find(findPerson => findPerson.name === parentName);\n\n    if (parent) {\n      return <PersonLink person={parent} />;\n    }\n\n    return parentName;\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td>\n        <NavLink\n          to={`/people/${person.slug}`}\n          className={cn({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </NavLink>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>{findParent(person.motherName)}</td>\n      <td>{findParent(person.fatherName)}</td>\n    </tr>\n  );\n};\n","import { Person } from '../../../types';\nimport { PeopleItem } from './PeopleItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PeopleItem\n            key={person.slug}\n            person={person}\n            people={people}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [peopleIsLoaded, setPeopleIsLoaded] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n      setPeopleIsLoaded(true);\n    } catch (err) {\n      setIsError(true);\n      setPeopleIsLoaded(true);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!peopleIsLoaded && (\n            <Loader />\n          )}\n\n          {peopleIsLoaded && !isError && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {peopleIsLoaded && !isError && (\n            (<PeopleTable people={people} />)\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { Navbar } from './components/Navbar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<NotFoundPage />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}